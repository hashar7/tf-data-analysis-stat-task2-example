import pandas as pd
import numpy as np

from scipy.stats import norm

# На заводе проводится тестирование модели машины для проверки коэффициента ускорения. В рамках эксперимента выбирается n машин этой модели и измеряется пройденный машиной путь через колчиество секунд, равное 56. Предполагается, что ошибки измерения пути независимы одинакого распределены и имеют распределение 1/2 - exp(1). Постройте симметричный доверительный интервал для коэффициента ускорения. В качестве входных данных выступают p - уровень доверия, число от 0 до 1 и одномерный массив numpy.ndarray измерений пути (в метрах) одной модели. В качетсве возвращаемого значения должен быть кортеж или список из двух значений равных левой и правой границе доверительного интервала.

chat_id = 458704720 # Ваш chat ID, не меняйте название переменной

def solution(p: float, x: np.array) -> tuple:
    n = len(x)
    s = np.sum(x)
    t = 56
    a_hat = 2 * s / (t**2 * n)
    i = n / a_hat**2
    se_a_hat = np.sqrt(a_hat**2 / (n * i))
    z_p_2 = norm.ppf(1 - (1 - p) / 2)
    left = a_hat - z_p_2 * se_a_hat
    right = a_hat + z_p_2 * se_a_hat
    return left, right
